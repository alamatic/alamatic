
from alamatic.intermediate.instructionarchetypes import *

instruction_types = [
    DiagnosticInstr.concrete_type("error"),
    DiagnosticInstr.concrete_type("diag"),
    PoisonInstr.concrete_type("poison"),
    ReturnInstr.concrete_type("ret"),
    UnconditionalJumpInstr.concrete_type("jump"),
    ConditionalJumpInstr.concrete_type("jump_if"),
    SwitchInstr.concrete_type("switch"),
    TerminatorInstr.concrete_type("end"),
    LiteralLoadInstr.concrete_type("load_literal"),
    MemoryLoadInstr.concrete_type("load_global"),
    MemoryStoreInstr.concrete_type("store_global"),
    MemoryLoadInstr.concrete_type("load_local"),
    MemoryStoreInstr.concrete_type("store_local"),
    MemoryLoadInstr.concrete_type("load_constant"),
    MemoryStoreInstr.concrete_type("store_constant"),
    LoadAttributeInstr.concrete_type("load_attr"),
    BinaryInstr.concrete_type("load_item"),
    StoreAttributeInstr.concrete_type("store_attr"),
    StoreItemInstr.concrete_type("store_item"),
    BinaryInstr.concrete_type("add"),
    BinaryInstr.concrete_type("subtract"),
    BinaryInstr.concrete_type("multiply"),
    BinaryInstr.concrete_type("divide"),
    BinaryInstr.concrete_type("modulo"),
    BinaryInstr.concrete_type("shift"),
    BinaryInstr.concrete_type("and"),
    BinaryInstr.concrete_type("bitand"),
    BinaryInstr.concrete_type("or"),
    BinaryInstr.concrete_type("bitor"),
    BinaryInstr.concrete_type("xor"),
    BinaryInstr.concrete_type("bitxor"),
    BinaryInstr.concrete_type("eq"),
    BinaryInstr.concrete_type("noteq"),
    BinaryInstr.concrete_type("lt"),
    BinaryInstr.concrete_type("gt"),
    BinaryInstr.concrete_type("lt_eq"),
    BinaryInstr.concrete_type("gt_eq"),
    BinaryInstr.concrete_type("convert"),
    SelectInstr.concrete_type("select"),
    CallInstr.concrete_type("call"),
    CallInstr.concrete_type("init_call"),
]
